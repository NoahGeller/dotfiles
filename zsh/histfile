nvim disk_load.asm
fg
nvim boot_sect.asm
nvim print_hex.asm
nvim print_string.asm
nvim boot_sect.asm
nvim print_string.asm
nvim boot_sect.asm
nvim print_string.asm
nvim print_hex.asm
fg
nvim boot_sect.asm
nvim print_hex.asm
nvim print_string.asm
nvim boot_sect.asm
nvim print_hex.asm
nvim boot_sect.asm
nvim print_hex.asm
nvim boot_sect.asm
nvim disk_load.asm
nvim boot_sect.asm
exit
startx
sudo shutdown -h now
env
echo $XDG_DATA_HOME
exit
cd .local
ls
cd share
ls
cd nvim
ls
cd ~
ls
ls -a
locate vim-airline
clear
updatedb
sudo updatedb
locate vim-airline
cd ~/.dotfiles/nvim
ls
sudo updatedb
locate vim-airline
ls
rm -rf plugged
sudo updatedb
locate vim-airline
exit
sudo pacman -S discord
cd dev/nos
ls
mkdir boot
mv boot_sect.asm boot
mv boot_sect.bin boot
mv disk_load.asm boot
mv print_hex.asm boot
mv print_string.asm boot
ls
mv bochsrc.txt boot
cd boot
ls
sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \\
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
fg
fg
nvim ~/.config/nvim/init.vim
fg
nvim ~/.config/nvim/init.vim
sudo pacman -S fzf
fg
sudo pacman -Rs fzf
cd fg
nvim ~/.config/nvim/init.vim
fg
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
ls
fg
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
nvim ~/.config/nvim/init.vim
fg
ls
nvim print_string.asm
mv print_string.asm print.asm
fg
ls
rm bochsrc.txt
ls
clear
cd ..
nvim basic.c
ls
mkdir kernel.c
nvim kernel.c
rm -rf kernel.c
nvim kernel.c
ls
rm Makefile
cd boot
nvim Makefile
exit
cd /usr/bin
ls
exit
cd dev/nos/boot
ls
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 format=raw boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 format=raw file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
clear
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
mv 32bit-print.asm print_pm.asm
ls
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
ls
bochs
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
nasm -f bin boot_sect.asm -o boot_sect.bin && qemu-system-x86_64 -drive format=raw,file=boot_sect.bin
cd ..
gcc
gcc -ffreestanding -c basic.c -o basic.o
ls
objdump -d basic.o
./basic.o
clear
ld
ld -o basic.bin
ld -o basic.bin -Ttext 0x0 --oformat binary basic.o
ls
./basic.bin
clear
ls
ndisasm -b 32 basic.bin > basic.dis
ls
objdump basic.dis
clear
objdump -d basic.dis
cat basic.dis
cat basic.dis | head
ls
rm basic.*
ls
gcc -ffreestanding -c kernel.c -o kernel.o
ls
ld -o kernel.bin -Ttext 0x1000 kernel.o --oformat binary
ls
nasm boot/boot_sect.asm boot/boot_sect.bin
nasm boot/boot_sect.asm -o boot/boot_sect.bin
cd boot
ls
nasm boot_sect.asm -o boot_sect.bin
nasm boot_sect.asm -o boot_sect.bin
cd ..
cat boot/boot_sect.bin kernel.bin > os-image
ls
ls
qemu-system-x86_64 os-image
cd boot
ls
nasm boot_sect.asm -o boot_sect.bin
cd ..
cat boot/boot_sect.bin kernel.bin > os-image
qemu-system-x86_64 os-image
cd boot
nasm boot_sect.asm -o boot_sect.bin
cd ..
cat boot/boot_sect.bin kernel.bin > os-image
qemu-system-x86_64 os-image
qemu-system-x86_64 -fda os-image
qemu-system-x86_64  os-image
qemu-system-x86_64 -fda os-image
ls
ls
make kernel.bin
ls
make clean
ls
rm os-image
ls
mv kernel.c boot
mv kernel_entry.asm boot
mv Makefile boot
ls
cd boot
ls
make clean
ls
make os-image.bin
mv boot_sect.asm bootsect.asm
rm boot_sect.bin
ls
make os-image.bin
ls
make os-image.bin
make os-image.bin
ls
make
make run
make run
make
sudo pacman -S i386-elf-gcc
sudo pacman -S gmp mpfr libmpc gcc
clear
ls
cd ~/.local/src
ls
git clone git://sourceware.org/git/binutils-gdb.git
ls
ls -a
clear
mv ~/downloads/binutils-2.35.1.tar.xz .
ls
ls
tar xf binutils-2.35.1.tar.xz
ls
rm binutils-2.35.1.tar.xz
clear
ls
cd binutils-2.35.1
ls
cd ..
cd ..
ls
mkdir bin
ls include
ls lib
clear
cd src
ls
mkdir /tmp/src
mv binutils-2.35.1 /tmp/src
cd /tmp/src
ls
mkdir binutils-build
cd binutils-build
export PREFIX="$HOME/.local/bin/i386-elf-gcc"
export TARGET=i386-elf
export PATH="$PREFIX/bin:$PATH"
ls
cd ..
ls
cd binutils-build
../binutils-2.35.1/configure --target=$TARGET --enable-interwork --enable-multilib --disable-nls --disable-werror --prefix=$PREFIX 2>&1 | tee configure.log
ls
make all install 2>&1 | tee make.log
clear
ls
cd ..
ls
mv ~/downloads/gcc-10.2.0.tar.xz .
ls
tar xf gcc-10.2.0.tar.xz
mkdir gcc-build
cd gcc-build
../gcc-10.2.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --disable-libssp --enable-languages=c --without-headers
make all-gcc
ls
cd ..
ls
rm -rf *
ls
cd ~
ls
cd .local/src
ls
mv ~/downloads/binutils-2.35.1.tar.xz .
ls
mv ~/downloads/gcc-10.2.0.tar.xz .
ls
ls
env
exit
env
clear
cd .local
ls
cd bin
ls
rm i386-elf-gcc
rm -r i386-elf-gcc
cd ..
ls
rm -r bin
mkdir cross
export PREFIX="$HOME/.local/cross"
export TARGET=i686-elf
export PATH="$PREFIX/bin:$PATH"
cd src
ls
tar xf binutils-2.35.1.tar.xz
mkdir build-binutils
cd build-binutils
../binutils-2.35.1/configure --target=$TARGET --prefix="$PREFIX" --with-sysroot --disable-nls --disable-werror
make
make install
cd ..
ls
cd ..
ls
cd cross
ls
cd bin
ls
cd ..
cd ..
cd src
ls
tar xf gcc-10.2.0.tar.xz
which -- $TARGET-as || echo $TARGET-as is not in the PATH
mkdir build-gcc
cd build-gcc
../gcc-10.2.0/configure --target=$TARGET --prefix="$PREFIX" --disable-nls --enable-languages=c,c++ --without-headers
make all-gcc && make all-target-libgcc && make install-gcc && make install-target-libgcc
cd ..
cd ..
cd cross
ls
cd bin
ls
exit
alsamixer
alsamixer
systemctl restart pulseaudio
sudo systemctl restart pulseaudio
sudo systemctl --user restart pulseaudio
sudo systemctl start pulseaudio
sudo pacman -S pulseaudio
exit
sudo systemctl enable pulseaudio
sudo pacman -S pulseaudio-alsa
sudo pacman -S pulseaudio-bluetooth
clear
sudo systemctl --user stop pulseaudio.service
speaker-test
speaker-test
speaker-test -Dhw:1,0 -c2
speaker-test -Dhw:1,0 -c2
lsusb
sudo pacman -S lsusb
lsusb
lspci
sudo pacman -S usbutils
lsusb
dmesg
dmesg
dmesg
export PATH="$HOME/.local/cross/bin:$PATH"
env
i686-elf-gcc --version
cd nos
cd dev/nos
ls
clear
mkdir barebones
cd barebones
nvim boot.s
exit
startx
cd dev/nos
ls
cd barebones
clear
sudo reboot
alsamixer
exit
speaker-test
speaker-test
speaker-test
speaker-test -c2
speaker-test -D default:PCH -c2
speaker-test -D default:PCH -c 2
aplay -L | grep :CARD
speaker-test -D sysdefault:PCH -c 2
speaker-test -D surround21:P780 -c 2
sudo alsa force-reload
sudo amixer force-reload
pulseaudio -k
cd .config
ls
cd pulse
ls
nvim default.pa
ls
ls /etc/pulse
sudo cp /etc/pulse/default.pa .
ls
nvim default.pa
pacmd list-sinks
pacmd list-sinks | egrep -i 'index:|name:'
pacmd list-sinks|egrep -i 'index:|name:'
pacmd list-sinks|egrep -i 'index:|name:'
pacmd list-sinks|egrep -i 'index:|name:'
alsamixer
alsamixer
sudo systemctl restart pulseaudio
sudo systemctl --user restart pulseaudio
systemctl --user restart pulseaudio
speaker-test
speaker-test
groups
man usermod
sudo usermod -aG audio noah
groups
id noah
speaker-test
alsamixer
speaker-test -c2
alsamixer
alsamixer
cd dev/nos/barebones
ls
cd ~/.config/zsh
ls
ls -a
nvim .zshenv
cd ~/dev/nos/barebones
source ~/.config/zsh/.zshenv
env
i686-elf-as boot.s -o boot.o
ls
objdump -d boot.o
objdump boot.o
clear
i686-elf-gcc -c kernel.c -o kernel.o -std=gnu99 -ffreestanding -O2 -Wall -Wextra
ls
i686-elf-gcc -T linker.ld -o myos.bin -ffreestanding -O2 -nostdlib boot.o kernel.o -lgcc
ls
i686-elf-as boot.s -o boot.o
i686-elf-gcc -c kernel.c -o kernel.o -std=gnu99 -ffreestanding -O2 -Wall -Wextra
i686-elf-gcc -T linker.ld -o myos.bin -ffreestanding -O2 -nostdlib boot.o kernel.o -lgcc
ls
grub-file --is-x86-multiboot myos.bin
echo $?
clear
qemu-system-i386
qemu-system-x86_64 -cdrom myos.iso
ls
mkdir -p isodir/boot/grub
cp myos.bin isodir/boot/myos.bin
cp grub.cfg isodir/boot/grub/grub.cfg
grub-mkrescue -o myos.iso isodir
sudo pacman -S xorriso
grub-mkrescue -o myos.iso isodir
ls
ls isodir
grub-mkrescue -o myos.iso isodir
sudo pacman -S mtools
grub-mkrescue -o myos.iso isodir
ls
qemu-system-x86_64 -cdrom myos.iso
i686-elf-as boot.s -o boot.o
i686-elf-gcc -c kernel.c -o kernel.o -std=gnu99 -ffreestanding -O2 -Wall -Wextra
i686-elf-gcc -T linker.ld -o myos.bin -ffreestanding -O2 -nostdlib boot.o kernel.o -lgcc
grub-file --is-x86-multiboot myos.bin
cp myos.bin isodir/boot/myos.bin
grub-mkrescue -o myos.iso isodir
sudo pacman -S qemu-system-i386
sudo pacman -S qemu-arch-extra
cd dev/nos
ls
ls
cd barebones
clear
ls
nvim boot.s
pwd
fg
nvim boot.s
ls
cd ..
ls
rm -rf barebones
rm -rf boot
git clone https://gitlab.com/sortie/meaty-skeleton.git
cd meaty-skeleton
git diff 084d1624bedaa9f9e395f055c6bd99299bd97f58..master
ls
ls
code .
cd dev/nos/barebones
source ~/.config/zsh/.zshenv
qemu-system-i386 -cdrom myos.iso
ls
cd ..
ls
cd meaty-skeleton
ls
chmod +x build.sh
chmod +x clean.sh
chmod +x default-host.sh
chmod +x headers.sh
chmod +x iso.sh
chmod +x qemu.sh
chmod +x target-triplet-to-arch.sh
./clean.sh
ls
./headers.sh
./iso.sh
./qemu.sh
exit
./qemu.sh
./qemu.sh
./qemu.sh
./qemu.sh
./qemu.sh
./qemu.sh
hwclock --systohc
sudo hwclock --systohc
timedatectl
timedatectl set-local-rtc 0
timedatectl
timedatectl set-local-rtc 1
sudo timedatectl set-local-rtc 1
timedatectl
sudo timedatectl set-local-rtc 0
timedatectl
sudo pacman -S tzdata
sudo timedatectl set-timezone America/Los_Angeles
timedatectl
sudo hwclock --systohc
timedatectl
startx
sudo reboot
timedatectl
timedatectl --systohc
hwclock --systohc
sudo hwclock --systohc
timedatectl
hwclock --show
sudo hwclock --show
sudo hwclock --hctosys
timedatectl
sudo pacman -S openntpd
sudo systemctl enable openntpd
sudo systemctl start openntpd
timedatectl
sudo hwclock --systohc
timedatectl
ps aux | grep redshift
clear
timedatectl
NetworkManager --help
exit
systemctl suspend
sudo pacman -S xmonad xmonad-contrib
sudo pacman -S xterm dmenu
xterm
nvim .xinitrc
killall xinit
cat /bin
ls /bin
ls /bin | head
ls /bin | head -20
clear
env
cd .config/zsh
nvim .zshenv
fg
sudo pacman -S alacritty
fg
nvim .zshenv
alacritty
fg
nvim .zshenv
killall xinit
env
sudo pacman -Rs xterm
killall xinit
cd downloads
ls
mv xmonad.hs ~/.xmonad
cd ~/.xmonad
ls
nvim xmonad.hs
exit
cd .config
ls
mkdir alacritty
cd alacritty
sudo cp /usr/share/doc/alacritty/example/alacritty.yml .
ls
nvim alacritty.yml
cd .config/zsh
nvim .zshenv
exit
ls
startx
clear
startx
startx
startx
sudo pacman -S xterm
startx
cd .xmonad
nvim xmonad
ls
nvim xmonad.hs
killall redshift
killall picom
killall nitrogen
ps aux | grep picom
fg
nvim xmonad.hs
ps aux | grep picom
ps aux | grep redshift
ps aux | grep nitrogen
fg
sudo reboot
cd .config
ls
mkdir xmonad
mv ~/.xmonad/xmonad.hs .
ls
mv xmonad.hs xmonad
cd xmonad
ls
cd xmonad
ls
nvim xmonad.hs
cd ~/.xmonad
ls
cd ~/.config
ls
mkdir xmobar
cd xmobar
xmobar
xmobar -x 0
xmobar -x 0 $XDG_CONFIG_HOME/xmobar/xmobarrc
ls
ls -a
cd .xmonad
ls
sudo pacman -S xterm
exit
xmobar
exit
sudo pacman -S xmessage
sudo pacman -S xorg-xmessage
cd .config/alacritty
ls
nvim alacritty.yml
clear
pwd
clear
cd ~/.xmonad
ls
nvim xmonad.hs
sudo pacman -S xmobar
clear
ls
cd ~/.config/xmobar
ls
cd /usr/share/doc/xmobar
cd /usr/share/doc
ls
cd xmonad
ls
cd ~/.config/xmobar
ls
ls
nvim xmobarrc
xmobar
fg
ls
cd ..
mv xmonad/xmonad.hs ~/.xmonad
rm -r xmonad
cd ~/.xmonad
nvim xmonad.hs
ps aux | grep xmobar
xmobar
xmobar
exit
xmobar $XDG_CONFIG_HOME/xmobar/xmobarrc
ps aux | grep xmobar
exit
fg
cd .xmonad
nvim xmonad.hs
xmobar $XDG_CONFIG_HOME/xmobar/xmobarrc
xmobar
xmobar
xmobar
xmobar
xmobar
exit
cd .xmonad
nvim xmonad.hs
rofi
nvim .xmonad/xmonad.hs
fg
cd .xmonad
nvim xmonad.hs
cat xmonad.hs
fg
killall xinit
kill -10 `pidof xmobar`
kill -12 `pidof xmobar`
kill -10 `pidof xmobar`
exit
alsamixer
exit
ip link
sudo pacman -Syu
sudo pacman -S gimp
exit
sudo pacman -Syu
clear
exit
startx
nvim
cd .config/alacritty
ls
nvim alacritty.yml
cd ..
cd picom
ls
nvim picom.conf
ls
cd ..
cd alacritty
nvim alacritty.yml
cd ../picom
nvim picom.conf
ls
cd ..
ls
nvim alacritty/alacritty.yml
picom --experimental-backends
picom --experimental-backends
yay -S picom-tryone-git
picom
killall picom
picom --experimental-backends
ps aux | grep picom
ps aux | grep redshift
ps aux | grep nitrogen
clear
exit
cd .xmonad
nvim xmonad.hs
cd .config/picom
nvim picom.conf
rofi -dump-Xresources
ls
exit
cd .config
ls
mkdir rofi
cd rofi
nvim config
rofi -dump-Xresources >> config
rofi -upgrade-config
ls
nvim config
rm config
nvim config.rasi
rofi -dump-config > config.rasi
nvim config.rasi
ls
cd .config/alacritty
ls
nvim alacritty.yml
cd ../../.xmonad
nvim xmonad.hs
cd ~/.local
ls
mkdir bin
ls
cd bin
wget https://bit.ly/emoji-menu
chmod +x emoji-menu
emoji-menu
cd ~/.config/zsh
nvim .zshenv
fg
exit
emoji-menu
sudo pacman -S xclip xdotool wget grep coreutils
clear
emoji-menu
ls
ls -a
mv .emoji-menu-db .config
mv .config/.emoji-menu-db .local/share
cd .xmonad
nvim xmonad.hs
cd ~/.local/share
ls
ls -a
mv .emoji-menu-db emoji-menu-db
fg
echo $XDG_DATA_HOME
fg
emoji-menu -f $XDG_DATA_HOME/emoji-menu-db
fg
exit
startx
startx
startx
cd .xmonad
nivm xmonad.hs
nvim xmonad.hs
echo $PATH
fg
notify-send hello
fg
sudo reboot
echo $XDG_DATA_HOME
exit
sudo pacman -Ss fantasque
sudo pacman -Ss ttf-fantasque-sans-mono
sudo pacman -S ttf-fantasque-sans-mono
cd .xmonad
nvim xmonad.hs
cd ..
sudo mv .local/bin/emoji-menu /usr/local/bin
echo $PATH
fg
nvim .xmonad/xmonad.hs
sudo rm /usr/local/bin/emoji-menu
cd .local/share
ls
rm emoji-menu-db
ls
cd ~
clear
cd .xmonad
nvim xmonad.hs
cd ~/.config/xmobar
nvim xmobarrc
cd ~/.config/nvim
nvim init.vim
nvim init.vim
sudo pacman -S powerline-fonts
sudo pacman -S powerline-vim
nvim init.vim
sudo pacman -S powerline-fonts
nvim init.vim
nvim init.vim
sudo pacman -S python-powerline
nvim init.vim
sudo pacman -Rs python-powerline
nvim init.vim
ls
vim init.vim
nvim init.vim
sudo pacman -S powerline-fonts
sudo pacman -Rs powerline-vim
fg
nvim init.vim
nvim init.vim
nvim init.vim
nvim init.vim
nvim init.vim
cd ..
ls
cd alacritty
nvim alacritty.yml
fg
cd ../fontconfig
ls
nvim fonts.conf
exit
exit
ls
nvim
cd .config/alacritty
nvim alacritty.yml
exit
nvim
exit
nvim
ls
ls
ls
nvim
nvim
exit
nvim
exit
pacman -Ss terminus
sudo pacman -S terminus-font
fc-list | grep terminus
fc-list | grep term
ls
nvim
pacman -Ss inconsolata
sudo pacman -S ttf-inconsolata
nvim
exit
nvim
exit
nvim
nvim
sudo pacman -S neofetch
exit
nvim
nvim .xmonad/xmonad.hs
cd ../.config
cd ..
cd ~/.config/xmobar
nvim xmobarrc
cd ../alacritty
nvim alacritty.yml
cd ~/.config/nvim
nvim init.vim
nvim init.vim
nvim init.vim
fg
vim init.vim
nvim init.vim
cd ../alacritty
nvim alacritty.yml
cd ../fontconfig
nvim fonts.conf
fc-list
fc-list | grep Fant
fg
cd ./
cd ..
nvim alacritty/alacritty.yml
cd ..
cd .config
nvim fontconfig/fonts.conf
exit
nvim .config/nvim/init.vim
nvim .config/nvim/init.vim
nvim .config/alacritty/alacritty.yml
exit
neofetch
clear
exit
sudo pip install powerline-shell
clear
nvim .config/zsh/.zshrc
cd .config/fontconfig
nvim fonts.conf
exit
cd .config
ls
mv alacritty ~/.dotfiles/alacritty
mkdir alacritty
ls alacritty
ls -l alacritty
ls -l
rm fontconfig
mkdir fontconfig
ls -l fontconfig
ls -l
cd ../.dotfiles
ls
nvim install.sh
./install.sh
chmod +x install.sh
./install.sh
fg
./install.sh
fg
./install.sh
fg
./install.sh
fg
./install.sh
fg
./install.sh
fg
./install.sh
sudo ./install.sh
fg
exit
ls
nvim
clear
cd .dotfiles
ls
pwd
clear
ls
mkdir xmonad
rm -rf termite
mkdir alacritty
ls
rm -r alacritty
ls
ln -s alacritty/alacritty.yml ~/.config/alacritty/alacritty.yml
clear
ln -s fontconfig/fonts.conf ~/.config/fontconfig/fonts.conf
mkdir rofi
yay -S nerd-fonts-complete
clear
cd ~/.config
ls
rm -rf alacritty
cd ..
ls -a
ls
cd .config
ls
ls /
sudo rm -rf /alacritty
cd zsh
nvim .zshrc
nvim .zshrc
nvim .zshenv
nvim install.sh
cd ~/.dotfiles
ls
nvim install.sh
cd .dotfiles
env
./install.sh
ls ~/.config
